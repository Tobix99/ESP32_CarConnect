author: Tobias Heinze
description: App for reading CAN-Bus and Displaying it in a website
version: 1.6.4

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

# Optional. List of tags for online search.
tags:
  - c

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

config_schema:
 - ["dash.enable", "b", true, {title: "Enable Mongoose Dashboard"}]
 - ["dash.token", "s", "cd530e8e711323014c289b6e", {title: "Token for Dashboard"}]
 - ["wifi.ap.enable", "b", false, {title: "disable Wifi AP"}]
 - ["wifi.sta.enable", "b", true, {title: "Enable Wifi Station"}]
 - ["wifi.sta.ssid", "s", "FRITZ!Box 6490 Cable", {title: "Wifi Station SSID"}]
 - ["wifi.sta.pass", "s", "36925260937434263697", {title: "Wifi Station Password"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

libs:
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  
  #make webserver
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/http-server
  
  #connection to mongoose dash
  - origin: https://github.com/mongoose-os-libs/dash
  
  #OTA services, first I don't now, second IMPORTANT, if not loaded, NO OTA
  - origin: https://github.com/mongoose-os-libs/ota-shadow
  - origin: https://github.com/mongoose-os-libs/rpc-service-ota

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-09-29
